@model CollectionApp.Application.ViewModels.BulkCustomerUpdateVM
@{
    ViewData["Title"] = "Bulk Update Customers";
}

<div class="container bulk-update">
    <h2>@ViewData["Title"]</h2>

    <div class="mb-3">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <span>Select Customers</span>
                <span id="selected-count" class="badge bg-secondary">0 selected</span>
            </div>
            <div class="card-body">
                <div class="input-group mb-2">
                    <input type="text" class="form-control" id="search-box" placeholder="Search customers...">
                    <button class="btn btn-outline-secondary" id="btn-search">Search</button>
                </div>
                <div id="selection-results"></div>
            </div>
        </div>
    </div>

    <form asp-action="BulkUpdate" method="post" id="bulk-update-form">
        <input type="hidden" asp-for="CustomerIds" />
        <div class="card mb-3">
            <div class="card-header">Contact Info</div>
            <div class="card-body row g-3">
                <div class="col-md-4">
                    <label asp-for="Street" class="form-label"></label>
                    <input asp-for="Street" class="form-control" />
                </div>
                <div class="col-md-2">
                    <label asp-for="City" class="form-label"></label>
                    <input asp-for="City" class="form-control" />
                </div>
                <div class="col-md-2">
                    <label asp-for="State" class="form-label"></label>
                    <input asp-for="State" class="form-control" />
                </div>
                <div class="col-md-2">
                    <label asp-for="Country" class="form-label"></label>
                    <input asp-for="Country" class="form-control" />
                </div>
                <div class="col-md-2">
                    <label asp-for="ZipCode" class="form-label"></label>
                    <input asp-for="ZipCode" class="form-control" />
                </div>

                <div class="col-md-2">
                    <label asp-for="PhoneCountryCode" class="form-label"></label>
                    <input asp-for="PhoneCountryCode" class="form-control" />
                </div>
                <div class="col-md-2">
                    <label asp-for="PhoneAreaCode" class="form-label"></label>
                    <input asp-for="PhoneAreaCode" class="form-control" />
                </div>
                <div class="col-md-3">
                    <label asp-for="PhoneNumber" class="form-label"></label>
                    <input asp-for="PhoneNumber" class="form-control" />
                </div>
                <div class="col-md-3">
                    <label asp-for="PhoneType" class="form-label"></label>
                    <input asp-for="PhoneType" class="form-control" />
                </div>

                <div class="col-md-4">
                    <label asp-for="Email" class="form-label"></label>
                    <input asp-for="Email" class="form-control" />
                </div>
                <div class="col-md-8">
                    <label asp-for="Notes" class="form-label"></label>
                    <input asp-for="Notes" class="form-control" />
                </div>
            </div>
        </div>

        <div class="d-flex gap-2">
            <button type="button" class="btn btn-outline-secondary" id="btn-preview">Preview</button>
            <button type="submit" class="btn btn-primary">Apply Update</button>
        </div>
    </form>
</div>

@section Scripts{
<script>
(function(){
    const selection = new Set();
    const selectedCount = document.getElementById('selected-count');

    function updateSelectedCount(){ selectedCount.textContent = `${selection.size} selected`; }

    document.getElementById('btn-search').addEventListener('click', function(){
        const term = document.getElementById('search-box').value || '';
        fetch('@Url.Action("Search", "Customer")?searchTerm=' + encodeURIComponent(term))
            .then(r => r.text())
            .then(html => {
                const container = document.getElementById('selection-results');
                container.innerHTML = html;
                // Wire checkbox changes
                container.querySelectorAll('.select-row').forEach(cb => {
                    cb.addEventListener('change', function(){
                        const id = this.getAttribute('data-id');
                        if (this.checked) selection.add(id); else selection.delete(id);
                        updateSelectedCount();
                    });
                });
                // Wire use selection button inside results
                const useBtn = container.querySelector('#bulk-select-btn');
                if (useBtn){
                    useBtn.addEventListener('click', function(){
                        const form = document.getElementById('bulk-update-form');
                        // Remove existing CustomerIds inputs
                        form.querySelectorAll('input[name="CustomerIds"]').forEach(e => e.remove());
                        Array.from(selection).forEach(id => {
                            const inp = document.createElement('input');
                            inp.type = 'hidden';
                            inp.name = 'CustomerIds';
                            inp.value = id;
                            form.appendChild(inp);
                        });
                        updateSelectedCount();
                    });
                }
            });
    });

    document.getElementById('btn-preview').addEventListener('click', function(){
        const form = document.getElementById('bulk-update-form');
        const data = new FormData(form);
        data.delete('CustomerIds');
        Array.from(selection).forEach(id => data.append('CustomerIds', id));
        fetch('@Url.Action("BulkPreview", "Customer")', { method:'POST', body:data, headers: { 'X-Requested-With': 'XMLHttpRequest' } })
            .then(r => r.json())
            .then(res => { alert(`Will update ${res.totalUpdated} of ${res.totalRequested}`); });
    });

    // Delegate checkbox changes for dynamically injected content
    document.getElementById('selection-results').addEventListener('change', function(e){
        const t = e.target;
        if (t && t.classList.contains('select-row')){
            const id = t.getAttribute('data-id');
            if (t.checked) selection.add(id); else selection.delete(id);
            updateSelectedCount();
        }
    });
})();
</script>
}