@using CollectionApp.Application.ViewModels
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model ContractCreateVM
@{
    ViewData["Title"] = Localizer["CreateContract"];
}
@section Styles {
    <link href="~/css/Contract/Create.css" rel="stylesheet" />

}
<div class="dashboard-content">
    <div class="dashboard-header mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h1 class="dashboard-title mb-1">@Localizer["CreateContract"]</h1>
                <p class="dashboard-subtitle">@Localizer["AddNewContract"]</p>
            </div>
            <a asp-action="Index" class="btn btn-outline-light btn-futuristic">
                <i class="fas fa-arrow-left me-2"></i>@Localizer["BackToList"]
            </a>
        </div>
    </div>

    <div class="row g-4">
        <div class="col-lg-8">
            <div class="futuristic-card">
                <div class="card-body p-4">
                    <form asp-action="Create" method="post">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger futuristic-alert"></div>

                        <div class="form-section">
                            <div class="section-header">
                                <h4 class="section-title"><i class="fas fa-info-circle me-2"></i>@Localizer["BasicInformation"]</h4>
                            </div>
                             <div class="row g-3 p-4">
                                <div class="col-md-6">
                                    <div class="form-group-futuristic">
                                        <label asp-for="ContractNumber" class="form-label-futuristic">@Localizer["ContractNumber"]</label>
                                        <input asp-for="ContractNumber" class="form-control-futuristic" placeholder="@Localizer["AutoGeneratedIfEmpty"]" />
                                        <span asp-validation-for="ContractNumber" class="validation-error"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group-futuristic">
                                        <label asp-for="CustomerId" class="form-label-futuristic">@Localizer["Customer"]</label>
                                        <select asp-for="CustomerId" class="form-control-futuristic" id="customerSelect">
                                            <option value="">@Localizer["SelectCustomer"]</option>
                                        </select>
                                        <span asp-validation-for="CustomerId" class="validation-error"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group-futuristic">
                                        <label asp-for="ContractType" class="form-label-futuristic">@Localizer["ContractType"]</label>
                                        <select asp-for="ContractType" class="form-control-futuristic">
                                            <option value="">@Localizer["Select"]...</option>
                                            <option value="Personal Loan">@Localizer["PersonalLoan"]</option>
                                            <option value="Business Loan">@Localizer["BusinessLoan"]</option>
                                        </select>
                                        <span asp-validation-for="ContractType" class="validation-error"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group-futuristic">
                                        <label asp-for="StaffId" class="form-label-futuristic">@Localizer["StaffAssigned"]</label>
                                        <select asp-for="StaffId" class="form-control-futuristic"><option value="">@Localizer["SelectStaff"]</option></select>
                                        <span asp-validation-for="StaffId" class="validation-error"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-section">
                            <div class="section-header">
                                <h4 class="section-title"><i class="fas fa-dollar-sign me-2"></i>@Localizer["FinancialTerms"]</h4>
                            </div>
                            <div class="row g-3 p-4">
                                <div class="col-md-6">
                                     <div class="form-group-futuristic">
                                        <label asp-for="PrincipalAmount" class="form-label-futuristic">@Localizer["PrincipalAmount"]</label>
                                        <input asp-for="PrincipalAmount" class="form-control-futuristic" placeholder="@Localizer["PrincipalAmountExample"]" />
                                        <span asp-validation-for="PrincipalAmount" class="validation-error"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                     <div class="form-group-futuristic">
                                        <label asp-for="InterestRate" class="form-label-futuristic">@Localizer["InterestRate"] (%)</label>
                                        <input asp-for="InterestRate" class="form-control-futuristic" placeholder="@Localizer["InterestRateExample"]" />
                                        <span asp-validation-for="InterestRate" class="validation-error"></span>
                                    </div>
                                </div>
                                 <div class="col-md-6">
                                     <div class="form-group-futuristic">
                                        <label asp-for="TermInMonths" class="form-label-futuristic">@Localizer["TermMonths"]</label>
                                        <input asp-for="TermInMonths" class="form-control-futuristic" placeholder="@Localizer["TermMonthsExample"]" />
                                        <span asp-validation-for="TermInMonths" class="validation-error"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                     <div class="form-group-futuristic">
                                        <label asp-for="PaymentFrequency" class="form-label-futuristic">@Localizer["PaymentFrequency"]</label>
                                        <select asp-for="PaymentFrequency" class="form-control-futuristic">
                                            <option value="Monthly">@Localizer["Monthly"]</option>
                                            <option value="Quarterly">@Localizer["Quarterly"]</option>
                                        </select>
                                        <span asp-validation-for="PaymentFrequency" class="validation-error"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-actions">
                            <button type="submit" class="btn btn-primary-futuristic"><i class="fas fa-save me-2"></i>@Localizer["CreateContract"]</button>
                            <a asp-action="Index" class="btn btn-secondary-futuristic"><i class="fas fa-times me-2"></i>@Localizer["Cancel"]</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="futuristic-card">
                <div class="card-header-futuristic">
                    <h5 class="card-title-futuristic"><i class="fas fa-info-circle me-2"></i>@Localizer["CreationGuidelines"]</h5>
                </div>
                <div class="card-body p-4">
                    <p class="guidelines-intro">@Localizer["FillRequiredContractDetails"]</p>
                    <ul class="guidelines-list">
                        <li><i class="fas fa-check-circle me-2"></i>@Localizer["AssignCustomerToContract"]</li>
                        <li><i class="fas fa-check-circle me-2"></i>@Localizer["DefinePrincipalAndInterest"]</li>
                        <li><i class="fas fa-check-circle me-2"></i>@Localizer["SetTermAndFrequency"]</li>
                        <li><i class="fas fa-check-circle me-2"></i>@Localizer["RequiredFieldsAsterisk"]</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        $(document).ready(function() {
            // Initialize form calculations
            calculateTotalAmount();
            calculateNumberOfInstallments();
            calculateEndDate();
            
            // Update currency symbols when currency changes
            $('#Currency').change(function() {
                updateCurrencySymbols();
            });
            
            // Load customers via AJAX
            loadCustomers();
        });

        function calculateTotalAmount() {
            const principal = parseFloat($('#PrincipalAmount').val()) || 0;
            const interestRate = parseFloat($('#InterestRate').val()) || 0;
            const total = principal + (principal * interestRate / 100);
            $('#TotalAmount').val(total.toFixed(2));
        }

        function calculateNumberOfInstallments() {
            const term = parseInt($('#TermInMonths').val()) || 0;
            const frequency = $('#PaymentFrequency').val();
            
            let installments = 0;
            switch(frequency) {
                case 'Weekly':
                    installments = term * 4; // Approximate weeks per month
                    break;
                case 'BiWeekly':
                    installments = term * 2; // Approximate bi-weeks per month
                    break;
                case 'Monthly':
                    installments = term;
                    break;
                case 'Quarterly':
                    installments = Math.ceil(term / 3);
                    break;
                case 'SemiAnnually':
                    installments = Math.ceil(term / 6);
                    break;
                case 'Annually':
                    installments = Math.ceil(term / 12);
                    break;
                default:
                    installments = 0;
            }
            
            $('#NumberOfInstallments').val(installments);
        }

        function calculateEndDate() {
            const startDate = $('#StartDate').val();
            const term = parseInt($('#TermInMonths').val()) || 0;
            
            if (startDate && term > 0) {
                const start = new Date(startDate);
                const end = new Date(start.getFullYear(), start.getMonth() + term, start.getDate());
                $('#EndDate').val(end.toISOString().split('T')[0]);
            }
        }

        function updateCurrencySymbols() {
            const currency = $('#Currency').val();
            const symbols = {
                'USD': '$',
                'EUR': '€',
                'GBP': '£',
                'JPY': '¥',
                'CAD': 'C$',
                'AUD': 'A$',
                'CHF': 'CHF',
                'CNY': '¥'
            };
            
            const symbol = symbols[currency] || '$';
            $('#currencySymbol, #totalCurrencySymbol').text(symbol);
        }

        function loadCustomers() {
            // Make an AJAX call to load customers from the API
            $.ajax({
                url: '/api/customers',
                type: 'GET',
                dataType: 'json',
                success: function(response) {
                    const select = $('#customerSelect');
                    // Clear existing options except the first one
                    select.find('option:not(:first)').remove();
                    
                    // Add customers from API response
                    if (response && response.items && response.items.length > 0) {
                        response.items.forEach(customer => {
                            select.append(new Option(customer.fullName, customer.id));
                        });
                    } else {
                        console.warn('No customers found or empty response');
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error loading customers:', error);
                    // Add a disabled option to indicate error
                    $('#customerSelect').append(new Option('Error loading customers', '', true, true).attr('disabled', 'disabled'));
                }
            });
            
            // Load staff members for the staff dropdown
            loadStaff();
        }
        
        function loadStaff() {
            // Make an AJAX call to load active staff from the API
            $.ajax({
                url: '/api/staff/active',
                type: 'GET',
                dataType: 'json',
                success: function(response) {
                    const select = $('#StaffId');
                    // Clear existing options except the first one
                    select.find('option:not(:first)').remove();
                    
                    // Add staff members from API response
                    if (response && response.length > 0) {
                        response.forEach(staff => {
                            select.append(new Option(staff.fullName, staff.id));
                        });
                    } else {
                        console.warn('No active staff found or empty response');
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error loading staff:', error);
                    // Add a disabled option to indicate error
                    $('#StaffId').append(new Option('Error loading staff', '', true, true).attr('disabled', 'disabled'));
                }
            });
        }

        // Form validation
        $('#contractForm').submit(function(e) {
            if (!this.checkValidity()) {
                e.preventDefault();
                e.stopPropagation();
            }
            $(this).addClass('was-validated');
        });
    </script>
}