@model Tracker_Money.Models.PagedViewModel<CollectionApp.Application.ViewModels.PaymentListVM>
@{
    ViewData["Title"] = "Payments";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <h4 class="mb-0">
                                <i class="fas fa-credit-card me-2"></i>Payments
                            </h4>
                        </div>
                        <div class="col-md-6 text-end">
                            <a asp-action="Create" class="btn btn-primary">
                                <i class="fas fa-plus me-1"></i>New Payment
                            </a>
                            <a asp-action="AdvancedSearch" class="btn btn-outline-secondary">
                                <i class="fas fa-search me-1"></i>Advanced Search
                            </a>
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    <!-- Search and Filter Section -->
                    <div class="row mb-3">
                        <div class="col-md-8">
                            <form method="get" class="d-flex">
                                <div class="input-group">
                                    <input type="text" class="form-control" name="searchTerm" 
                                           value="@ViewBag.SearchTerm" placeholder="Search payments...">
                                    <button class="btn btn-outline-secondary" type="submit">
                                        <i class="fas fa-search"></i>
                                    </button>
                                </div>
                            </form>
                        </div>
                        <div class="col-md-4 text-end">
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="exportPayments()">
                                    <i class="fas fa-download me-1"></i>Export
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="refreshPayments()">
                                    <i class="fas fa-sync-alt me-1"></i>Refresh
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Payments Table -->
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>
                                        <a asp-action="Index" asp-route-orderBy="PaymentDate" asp-route-searchTerm="@ViewBag.SearchTerm" 
                                           class="text-white text-decoration-none">
                                            Payment Date
                                            @if (Model.OrderBy == "PaymentDate")
                                            {
                                                <i class="fas fa-sort-alpha-down ms-1"></i>
                                            }
                                        </a>
                                    </th>
                                    <th>
                                        <a asp-action="Index" asp-route-orderBy="ContractNumber" asp-route-searchTerm="@ViewBag.SearchTerm" 
                                           class="text-white text-decoration-none">
                                            Contract Number
                                            @if (Model.OrderBy == "ContractNumber")
                                            {
                                                <i class="fas fa-sort-alpha-down ms-1"></i>
                                            }
                                        </a>
                                    </th>
                                    <th>Customer Name</th>
                                    <th>Installment</th>
                                    <th>
                                        <a asp-action="Index" asp-route-orderBy="Amount" asp-route-searchTerm="@ViewBag.SearchTerm" 
                                           class="text-white text-decoration-none">
                                            Amount
                                            @if (Model.OrderBy == "Amount")
                                            {
                                                <i class="fas fa-sort-alpha-down ms-1"></i>
                                            }
                                        </a>
                                    </th>
                                    <th>Payment Method</th>
                                    <th>Reference</th>
                                    <th>Staff</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Items.Any())
                                {
                                    @foreach (var payment in Model.Items)
                                    {
                                        <tr>
                                            <td>
                                                <span class="text-muted">@payment.PaymentDate.ToString("MMM dd, yyyy")</span>
                                            </td>
                                            <td>
                                                <a asp-controller="Contract" asp-action="Details" asp-route-id="@payment.ContractId" 
                                                   class="text-decoration-none">
                                                    @payment.ContractNumber
                                                </a>
                                            </td>
                                            <td>
                                                <span class="fw-medium">@payment.CustomerName</span>
                                            </td>
                                            <td>
                                                @if (payment.InstallmentNumber.HasValue)
                                                {
                                                    <span class="badge bg-info">#@payment.InstallmentNumber</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                                                    <td>
                            <span class="fw-bold text-success">
                                @Tracker_Money.Helpers.CurrencyFormatter.FormatCurrency(payment.Amount, payment.Currency)
                            </span>
                        </td>
                                            <td>
                                                <span class="badge bg-primary">@payment.PaymentMethod</span>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(payment.ReferenceNumber))
                                                {
                                                    <span class="text-muted">@payment.ReferenceNumber</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                <span class="text-muted">@payment.StaffName</span>
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a asp-action="Details" asp-route-id="@payment.Id" 
                                                       class="btn btn-outline-primary btn-sm" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a asp-action="Edit" asp-route-id="@payment.Id" 
                                                       class="btn btn-outline-secondary btn-sm" title="Edit">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-outline-warning btn-sm" 
                                                            onclick="showReversePaymentModal('@payment.Id')" title="Reverse Payment">
                                                        <i class="fas fa-undo"></i>
                                                    </button>
                                                    @if (!string.IsNullOrEmpty(payment.ReceiptNumber))
                                                    {
                                                        <a asp-action="ViewReceipt" asp-route-id="@payment.Id" 
                                                           class="btn btn-outline-info btn-sm" title="View Receipt">
                                                            <i class="fas fa-receipt"></i>
                                                        </a>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="9" class="text-center py-4">
                                            <div class="text-muted">
                                                <i class="fas fa-inbox fa-3x mb-3"></i>
                                                <p class="mb-0">No payments found</p>
                                                @if (!string.IsNullOrEmpty(ViewBag.SearchTerm))
                                                {
                                                    <small>Try adjusting your search criteria</small>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- Pagination -->
                    @if (Model.TotalPages > 1)
                    {
                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <div class="text-muted">
                                Showing @((Model.PageNumber - 1) * Model.PageSize + 1) to 
                                @Math.Min(Model.PageNumber * Model.PageSize, Model.TotalCount) of @Model.TotalCount payments
                            </div>
                            <partial name="_Pager" model="Model" />
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Reverse Payment Modal -->
<div class="modal fade" id="reversePaymentModal" tabindex="-1" aria-labelledby="reversePaymentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reversePaymentModalLabel">
                    <i class="fas fa-exclamation-triangle text-warning me-2"></i>Reverse Payment
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="ReversePayment" method="post" id="reversePaymentForm">
                <div class="modal-body">
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>Warning:</strong> This action cannot be undone. The payment will be reversed and a reversal entry will be created.
                    </div>
                    <input type="hidden" id="paymentId" name="PaymentId" />
                    <div class="mb-3">
                        <label for="reason" class="form-label">Reason for Reversal *</label>
                        <textarea class="form-control" id="reason" name="Reason" rows="3" 
                                  placeholder="Please provide a reason for reversing this payment..." required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-warning">
                        <i class="fas fa-undo me-1"></i>Reverse Payment
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showReversePaymentModal(paymentId) {
            // Get payment details first
            $.get(`/api/payments/${paymentId}`, function(response) {
                if (response.success) {
                    const payment = response.data;
                    const paymentData = {
                        amount: payment.amount,
                        currency: payment.currency,
                        paymentDate: payment.paymentDate,
                        paymentMethod: payment.paymentMethod
                    };
                    
                    // Show the modal with payment details using the global function
                    PaymentOperations.showReversePaymentModal(paymentId, paymentData);
                } else {
                    alert('Failed to load payment details');
                }
            }).fail(function() {
                alert('Error loading payment details');
            });
        }

        function exportPayments() {
            // Implementation for exporting payments
            alert('Export functionality will be implemented here');
        }

        function refreshPayments() {
            window.location.reload();
        }

        // Auto-hide success/error messages after 5 seconds
        setTimeout(function() {
            const alerts = document.querySelectorAll('.alert-dismissible');
            alerts.forEach(function(alert) {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    </script>
}

@section Styles {
    <link rel="stylesheet" href="~/css/Payment/Index.css" />
} 